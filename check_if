#! /bin/sh

PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin

PROGNAME=`basename $0`
PROGPATH=`echo $0 | sed -e 's,[\\/][^\\/][^\\/]*$,,'`
REVISION="0.9.0"

print_usage() {
	echo "Usage: "
	echo "  $PROGNAME -v | --version" 
	echo "  $PROGNAME -h | --help" 
	echo "  $PROGNAME -H host [ -u user(ssh) ] -i interface"
}
print_examples() {
	echo "Example: "
	echo "  check_if -H myrouter -u administrator -i ppp0"
	echo "  returns e.g.: OK: ppp0 947/977MB down/up, 15 connections, 0.01 load|ppp0_RXbps=993982367, ppp0_TXbps=1024750598, ppp0_connections=15, load=0.01"
}
print_revision() {
	echo "$PROGNAME version: $REVISION"
	echo "Bohuslav Riha - http://www.gnu.org/licenses/gpl-2.0.txt"
}

print_help() {	
	print_revision
	echo ""
	echo "A plugin in bash designed to monitor router throughtput rate. "
	echo "Requires a key-based ssh access to the remote host -H, user -u."
	echo "Data is read from ifconfig command output."
	echo "The plugin also returns number of active connections & current load."
	echo ""
	print_usage
	echo ""
	print_examples
	echo ""
	exit 0
}

USER=$( whoami )

while :
do
case "$1" in
	-h | --help)
		print_help
		exit 0
		;;
	-v | --version)
   		print_revision
		exit 0
		;;
	-H | --host)
		HOST="$2"
		shift 2
		;;
	-u | --user)
		USER="$2"
		shift 2
		;;
	-i | --interface)
		INTERFACE="$2"
		shift 2
		;;
	--) # end of all options
		shift
		break
		;;
	-*)
		echo "Unknown parameter: $1" >&2
		exit -1
		;;
	*) # no more options
		break
		;;
esac
done
if [ -z "$HOST" ]; then
	echo "Parameter -H required."
	exit -1
fi
if [ -z "$INTERFACE" ]; then
	echo "Parameter -i required."
	exit -1
fi

SSH_COMMAND="ssh $USER@$HOST ifconfig $INTERFACE | egrep -e '(R|T)X bytes' && echo \|&& cat /proc/sys/net/netfilter/nf_conntrack_count&&echo \|&& cat /proc/loadavg|cut -d' ' -f1"
RAWDATA=$( $SSH_COMMAND )
if [ $? -ne 0 ]
then
	echo CRITICAL: Error issuing command: $SSH_COMMAND
	exit 2
fi

#echo $RAWDATA

RX=$(echo $RAWDATA | sed 's/^.*RX bytes:\([0-9]\+\).*$/\1/' ) 
TX=$(echo $RAWDATA | sed 's/^.*TX bytes:\([0-9]\+\).*$/\1/' )
RXMB=$( echo "$RX/1048576" | bc )
TXMB=$( echo "$TX/1048576" | bc )

CONN=$( echo $RAWDATA | cut -d'|' -f2 | sed 's/\s*//g' )
LOAD=$( echo $RAWDATA | cut -d'|' -f3 | sed 's/\s*//g' )

#echo RX: -$RX-
#echo TX: -$TX-
#echo CONN: -$CONN-

PERFDATA="${INTERFACE}_RXbps=$RX, ${INTERFACE}_TXbps=$TX, ${INTERFACE}_connections=$CONN, load=$LOAD"

echo -e "OK: $INTERFACE $RXMB/${TXMB}MB down/up, $CONN connections, $LOAD load|$PERFDATA"
exit 0

